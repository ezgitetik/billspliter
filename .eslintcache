[{"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/index.tsx":"1","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/reportWebVitals.js":"2","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/App.tsx":"3","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/routes.tsx":"4","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Home/Home.tsx":"5","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Home/styles.tsx":"6","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Login/index.tsx":"7","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Login/Login.tsx":"8","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Login/styles.tsx":"9","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/SignUp/SignUp.tsx":"10","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/SignUp/index.tsx":"11","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/SignUp/styles.tsx":"12","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Event/Event.tsx":"13","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Event/styles.tsx":"14","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomCard/index.tsx":"15","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomCard/CustomCard.tsx":"16","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomNavbar/index.tsx":"17","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomNavbar/CustomNavbar.tsx":"18","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomCard/styles.tsx":"19","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomModal/index.tsx":"20","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomModal/CustomModal.tsx":"21","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomDropdown/index.tsx":"22","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomDropdown/CustomDropdown.tsx":"23","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomDropdown/styles.tsx":"24","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Event/EventPage.tsx":"25","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Trip/index.tsx":"26","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Trip/TripPage.tsx":"27","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Trip/styles.tsx":"28","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Trip/Users.tsx":"29"},{"size":500,"mtime":1607289108025,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1607262580615,"results":"32","hashOfConfig":"31"},{"size":224,"mtime":1607292084982,"results":"33","hashOfConfig":"31"},{"size":521,"mtime":1607886822187,"results":"34","hashOfConfig":"31"},{"size":1602,"mtime":1607720073177,"results":"35","hashOfConfig":"31"},{"size":1084,"mtime":1607541052035,"results":"36","hashOfConfig":"31"},{"size":51,"mtime":1607535442703,"results":"37","hashOfConfig":"31"},{"size":2064,"mtime":1607723561119,"results":"38","hashOfConfig":"31"},{"size":439,"mtime":1607536993546,"results":"39","hashOfConfig":"31"},{"size":2120,"mtime":1607723565357,"results":"40","hashOfConfig":"31"},{"size":54,"mtime":1607720066176,"results":"41","hashOfConfig":"31"},{"size":212,"mtime":1607720937090,"results":"42","hashOfConfig":"31"},{"size":684,"mtime":1607887110621,"results":"43","hashOfConfig":"31"},{"size":248,"mtime":1607883864438,"results":"44","hashOfConfig":"31"},{"size":67,"mtime":1607724381806,"results":"45","hashOfConfig":"31"},{"size":1934,"mtime":1607890690876,"results":"46","hashOfConfig":"31"},{"size":72,"mtime":1607724917959,"results":"47","hashOfConfig":"31"},{"size":1637,"mtime":1607888655729,"results":"48","hashOfConfig":"31"},{"size":651,"mtime":1607890701741,"results":"49","hashOfConfig":"31"},{"size":70,"mtime":1607883222511,"results":"50","hashOfConfig":"31"},{"size":768,"mtime":1607883810914,"results":"51","hashOfConfig":"31"},{"size":79,"mtime":1607884093537,"results":"52","hashOfConfig":"31"},{"size":1158,"mtime":1607885066203,"results":"53","hashOfConfig":"31"},{"size":876,"mtime":1607885179774,"results":"54","hashOfConfig":"31"},{"size":3081,"mtime":1607889238860,"results":"55","hashOfConfig":"31"},{"size":61,"mtime":1607887094632,"results":"56","hashOfConfig":"31"},{"size":982,"mtime":1607890747930,"results":"57","hashOfConfig":"31"},{"size":268,"mtime":1607888560633,"results":"58","hashOfConfig":"31"},{"size":5161,"mtime":1613594212102,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"yr6x7l",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/index.tsx",[],[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/reportWebVitals.js",["131","132"],"const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/App.tsx",["133"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Routes from \"./routes\";\n\nconst App = () => {\n  return (\n    <div>\n      <Routes />\n    </div>\n  );\n};\n\nexport default App;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/routes.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Home/Home.tsx",["134"],"import React from \"react\";\nimport {\n  Container,\n  IconContainer,\n  InnerContainer,\n  Subtitle,\n  Title,\n} from \"./styles\";\nimport { StyledButton } from \"./styles\";\nimport expense from \"src/icons/expense.png\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport Login from \"../Login\";\nimport SignUp from \"../SignUp\";\n\nconst Home = () => {\n  const history = useHistory();\n  const isLogin = useRouteMatch(\"/login\")?.isExact;\n  const isSignUp = useRouteMatch(\"/signup\")?.isExact;\n  const isHome = useRouteMatch(\"/\")?.isExact;\n\n  return (\n    <Container>\n      <InnerContainer>\n        <IconContainer>\n          <img\n            src={expense}\n            style={{ width: 200, marginTop: 100 }}\n            alt=\"fireSpot\"\n          />\n        </IconContainer>\n        <Title>Bill Splitter</Title>\n\n        {isHome && (\n          <>\n            <Subtitle>\n              Keep track of your shared expenses and balances with housemates,\n              trips, groups, friends, and family.\n            </Subtitle>\n            <StyledButton\n              variant=\"outline-success\"\n              onClick={() => history.push(\"login\")}\n            >\n              Login\n            </StyledButton>\n            <Subtitle style={{ margin: 0 }}>or</Subtitle>\n            <StyledButton\n              variant=\"outline-success\"\n              onClick={() => history.push(\"signup\")}\n            >\n              Sign up\n            </StyledButton>\n          </>\n        )}\n\n        {isLogin && <Login />}\n        {isSignUp && <SignUp />}\n      </InnerContainer>\n    </Container>\n  );\n};\n\nexport default Home;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Home/styles.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Login/index.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Login/Login.tsx",["135","136"],"import React, { useState } from \"react\";\nimport { StyledButton, Subtitle } from \"../Home/styles\";\nimport { LoginContainer, StyledFrom } from \"./styles\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { ReactComponent as GoogleLogo } from \"src/icons/google.svg\";\nimport { LoginLink, StyledInfoText } from \"../SignUp/styles\";\nimport { useHistory } from \"react-router\";\n\nconst Login = () => {\n  const history = useHistory();\n  const [isLoginWithGoogle, setLoginWithGoogle] = useState();\n  return (\n    <LoginContainer>\n      <StyledButton\n        variant=\"outline-success\"\n        onClick={setLoginWithGoogle}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <GoogleLogo style={{ width: 16, marginRight: 24 }} />\n        Login with Google\n      </StyledButton>\n      <Subtitle style={{ margin: 0 }}>or</Subtitle>\n\n      <StyledFrom>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Remember me\" />\n        </Form.Group>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            variant=\"success\"\n            type=\"submit\"\n            style={{ width: 250 }}\n            onClick={() => history.replace(\"/event\")}\n          >\n            Submit\n          </Button>\n        </div>\n        <StyledInfoText>\n          <div>\n            Are you new at Bill Splitter?{\" \"}\n            <LoginLink onClick={() => history.replace(\"/signup\")}>\n              Sign Up\n            </LoginLink>\n          </div>\n        </StyledInfoText>\n      </StyledFrom>\n    </LoginContainer>\n  );\n};\n\nexport default Login;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Login/styles.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/SignUp/SignUp.tsx",["137","138"],"import React, { useState } from \"react\";\nimport { StyledButton, Subtitle } from \"../Home/styles\";\nimport { LoginContainer, StyledFrom } from \"../Login/styles\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { ReactComponent as GoogleLogo } from \"src/icons/google.svg\";\nimport { LoginLink, StyledInfoText } from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUp = () => {\n  const history = useHistory();\n  const [signUpWithGoogle, setSignUpWithGoogle] = useState();\n  return (\n    <LoginContainer>\n      <StyledButton\n        variant=\"outline-success\"\n        onClick={setSignUpWithGoogle}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <GoogleLogo style={{ width: 16, marginRight: 24 }} />\n        Sign Up with Google\n      </StyledButton>\n      <Subtitle style={{ margin: 0 }}>or</Subtitle>\n\n      <StyledFrom>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Repeat Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" />\n        </Form.Group>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            variant=\"success\"\n            type=\"submit\"\n            style={{ width: 250 }}\n            onClick={() => history.replace(\"/event\")}\n          >\n            Submit\n          </Button>\n        </div>\n        <StyledInfoText>\n          <div>\n            Already have an account?{\" \"}\n            <LoginLink onClick={() => history.replace(\"/login\")}>\n              Login\n            </LoginLink>\n          </div>\n        </StyledInfoText>\n      </StyledFrom>\n    </LoginContainer>\n  );\n};\n\nexport default SignUp;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/SignUp/index.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/SignUp/styles.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Event/Event.tsx",["139"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CustomNavbar from \"../../components/CustomNavbar\";\nimport TripPage from \"../Trip\";\nimport EventPage from \"./EventPage\";\n\nconst Event = () => {\n  const params: { trip: string } = useParams();\n  const tripId = params?.trip;\n  const isEvent = !tripId;\n  return (\n    <>\n      <CustomNavbar\n        brand=\"Bill Splitter\"\n        links={[\n          { name: \"Events\", link: \"/event\" },\n          { name: \"Settings\", link: \"/event\" },\n          { name: \"Logout\", link: \"/\" },\n        ]}\n      />\n      {isEvent && <EventPage />}\n      {tripId && <TripPage id={tripId} />}\n    </>\n  );\n};\n\nexport default Event;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Event/styles.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomCard/index.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomCard/CustomCard.tsx",["140"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { CountText, EventCard, FlexContainer } from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileInvoice, faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport CSS from \"csstype\";\n\ntype TProps = {\n  title?: string;\n  subtitle?: string;\n  text?: string;\n  link?: string;\n  image?: string;\n  userCount?: number;\n  expenseCount?: number;\n  onClick?: any;\n  style?: CSS.Properties;\n  hoverEffect?: boolean;\n};\nconst CustomCard: React.FC<TProps> = ({\n  title,\n  subtitle,\n  text,\n  link,\n  image,\n  userCount,\n  expenseCount,\n  onClick,\n  style,\n  hoverEffect = true,\n}) => {\n  return (\n    <EventCard\n      hoverEffect={}\n      border=\"success\"\n      style={{ width: \"100%\", flexDirection: \"row\", margin: \"16px\", ...style }}\n      onClick={onClick}\n    >\n      {image && (\n        <Card.Img\n          style={{\n            width: \"4rem\",\n            height: \"4rem\",\n            margin: \"16px\",\n            borderRadius: \" 50%\",\n          }}\n          src={image}\n        />\n      )}\n      <Card.Body>\n        {title && <Card.Title>{title}</Card.Title>}\n        {subtitle && (\n          <Card.Subtitle\n            style={{ fontSize: \"13px\" }}\n            className=\"mb-2 text-muted\"\n          >\n            {subtitle}\n          </Card.Subtitle>\n        )}\n        {text && <Card.Text>{text}</Card.Text>}\n        {link && <Card.Link href=\"#\">{link}</Card.Link>}\n        {userCount && (\n          <FlexContainer>\n            <FontAwesomeIcon icon={faUsers} />\n            <CountText>{userCount}</CountText>\n          </FlexContainer>\n        )}\n        {expenseCount && (\n          <FlexContainer>\n            <FontAwesomeIcon icon={faFileInvoice} />\n            <CountText>{expenseCount}</CountText>\n          </FlexContainer>\n        )}\n      </Card.Body>\n    </EventCard>\n  );\n};\n\nexport default CustomCard;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomNavbar/index.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomNavbar/CustomNavbar.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomCard/styles.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomModal/index.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomModal/CustomModal.tsx",["141","142","143"],"import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\ntype TProps = {\n  show?: boolean;\n  handleClose?: any;\n  handleSave?: any;\n  header: string;\n  body: any;\n};\nconst CustomModal: React.FC<TProps> = ({\n  show,\n  handleClose,\n  header,\n  body,\n  handleSave,\n}) => {\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{header}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{body()}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"success\" onClick={handleSave}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CustomModal;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomDropdown/index.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomDropdown/CustomDropdown.tsx",["144","145","146","147"],"import React, { useEffect, useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Menu, StyledDropdown } from \"./styles\";\n\ntype TProps = {\n  items: any[];\n  placeholder?: string;\n  selected?: string;\n  onSelect: any;\n  clearSelection?: boolean;\n};\nconst CustomDropdown: React.FC<TProps> = ({\n  items,\n  placeholder = \"Select\",\n  selected,\n  clearSelection,\n  onSelect,\n}) => {\n  const [selectedItem, setSelectedItem] = useState(selected);\n  const handleSelect = (key: any) => {\n    setSelectedItem(key);\n    onSelect(key);\n  };\n  useEffect(() => {\n    selected && setSelectedItem(selected);\n  }, [selected]);\n  useEffect(() => {\n    clearSelection && setSelectedItem(\"0\");\n  }, [clearSelection]);\n  return (\n    <StyledDropdown onSelect={handleSelect}>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        {selectedItem ?? placeholder}\n      </Dropdown.Toggle>\n\n      <Menu>\n        {items.map((item: any, index: number) => (\n          <Dropdown.Item eventKey={item} key={index + 1}>\n            {item}\n          </Dropdown.Item>\n        ))}\n      </Menu>\n    </StyledDropdown>\n  );\n};\n\nexport default CustomDropdown;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/components/CustomDropdown/styles.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Event/EventPage.tsx",["148","149"],"import React, { useState } from \"react\";\nimport { Container, StyledFrom } from \"./styles\";\nimport { StyledButton } from \"../Home/styles\";\nimport CustomCard from \"../../components/CustomCard\";\nimport CustomModal from \"../../components/CustomModal\";\nimport { FlexContainer } from \"../../components/CustomCard/styles\";\nimport { Form, Image } from \"react-bootstrap\";\nimport CustomDropdown from \"../../components/CustomDropdown\";\nimport { useHistory } from \"react-router-dom\";\n\nconst EventPage = () => {\n  const history = useHistory();\n  const [newEventModal, showNewEventModal] = useState(false);\n\n  const renderModalBody = () => {\n    return (\n      <>\n        <StyledFrom>\n          <FlexContainer style={{ justifyContent: \"center\" }}>\n            <Image\n              style={{\n                width: \"6rem\",\n                height: \"6rem\",\n                marginBottom: \"16px\",\n                borderRadius: \" 50%\",\n              }}\n              src=\"https://cdn.filestackcontent.com/6uvo4KDWS6CM3J8tTV93\"\n            />\n          </FlexContainer>\n          <Form.Group controlId=\"formEventName\">\n            <Form.Label>Event Name</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter Event Name\" />\n          </Form.Group>\n          <Form.Group controlId=\"formEventCurrency\">\n            <Form.Label>Event Currency</Form.Label>\n            <CustomDropdown\n              items={[\"EURO\", \"USD\", \"TL\"]}\n              onSelect={(event: any) => console.log(event)}\n              placeholder=\"Select Currency\"\n            />\n          </Form.Group>\n        </StyledFrom>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Container>\n        <StyledButton\n          style={{ width: 150 }}\n          variant=\"success\"\n          onClick={() => showNewEventModal(true)}\n        >\n          + New Event\n        </StyledButton>\n        <CustomCard\n          image=\"https://cdn.filestackcontent.com/6uvo4KDWS6CM3J8tTV93\"\n          title=\"Prag Trip\"\n          subtitle=\"10.7.2015 - 16.8.2015\"\n          userCount={4}\n          onClick={() => history.push(\"/event/1\")}\n        />\n        <CustomCard\n          image=\"https://cdn.filestackcontent.com/aOX5KMNoQkG2YaE1ZBEO\"\n          title=\"Diyarbakir Trip\"\n          subtitle=\"12.12.2019 - 16.12.2019\"\n          userCount={6}\n          onClick={() => history.push(\"/event/2\")}\n        />\n        <CustomCard\n          image=\" https://cdn.filestackcontent.com/Z0VSZNG3R9WthJFH3tQQ\"\n          title=\"Paris Trip\"\n          subtitle=\"10.1.2017 - 16.8.2017\"\n          userCount={2}\n          onClick={() => history.push(\"/event/3\")}\n        />\n        <CustomCard\n          image=\"https://cdn.filestackcontent.com/QvCNV5lFTN6Awy2GI1FN\"\n          title=\"Italy Trip\"\n          subtitle=\"1.1.2019 - 6.2.2019\"\n          userCount={5}\n          onClick={() => history.push(\"/event/4\")}\n        />\n      </Container>\n      <CustomModal\n        show={newEventModal}\n        handleClose={() => showNewEventModal(false)}\n        header=\"Create New Event\"\n        body={() => renderModalBody()}\n      />\n    </>\n  );\n};\nexport default EventPage;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Trip/index.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Trip/TripPage.tsx",["150","151","152","153"],"import React from \"react\";\nimport CustomCard from \"../../components/CustomCard\";\nimport { Container } from \"../Event/styles\";\nimport { Tab } from \"react-bootstrap\";\nimport { TripTab } from \"./styles\";\nimport { Users } from \"./Users\";\n\nconst TripPage = ({ id }: any) => {\n  return (\n    <>\n      <Container>\n        <CustomCard\n          image=\"https://cdn.filestackcontent.com/6uvo4KDWS6CM3J8tTV93\"\n          title=\"Prag Trip\"\n          subtitle=\"10.7.2015 - 16.8.2015\"\n          userCount={4}\n          hoverEffect={false}\n          style={{ margin: \"0\", border: \"none\" }}\n        />\n        <TripTab defaultActiveKey=\"users\" id=\"trip\">\n          <Tab eventKey=\"users\" title=\"Users\">\n            <Users />\n          </Tab>\n          <Tab eventKey=\"expenses\" title=\"Expenses\">\n            <div />\n          </Tab>\n          <Tab eventKey=\"balance\" title=\"Balance\">\n            <div />\n          </Tab>\n        </TripTab>\n      </Container>\n    </>\n  );\n};\n\nexport default TripPage;\n","/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Trip/styles.tsx",[],"/Users/ezgitetiksaglam/WebstormProjects/split-app/src/views/Trip/Users.tsx",["154","155","156"],{"ruleId":"157","severity":1,"message":"158","line":1,"column":25,"nodeType":"159","messageId":"160","endLine":1,"endColumn":39},{"ruleId":"157","severity":1,"message":"161","line":1,"column":25,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":6,"column":13,"nodeType":"159","messageId":"160","endLine":6,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":15,"column":14,"nodeType":"159","messageId":"160","endLine":15,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":9,"column":15,"nodeType":"159","messageId":"160","endLine":9,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":11,"column":10,"nodeType":"162","messageId":"166","endLine":11,"endColumn":27},{"ruleId":"157","severity":1,"message":"158","line":9,"column":16,"nodeType":"159","messageId":"160","endLine":9,"endColumn":21},{"ruleId":"164","severity":1,"message":"167","line":11,"column":10,"nodeType":"162","messageId":"166","endLine":11,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":7,"column":15,"nodeType":"159","messageId":"160","endLine":7,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":16,"column":13,"nodeType":"170","messageId":"171","endLine":16,"endColumn":16,"suggestions":"172"},{"ruleId":"168","severity":1,"message":"169","line":6,"column":17,"nodeType":"170","messageId":"171","endLine":6,"endColumn":20,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"169","line":7,"column":16,"nodeType":"170","messageId":"171","endLine":7,"endColumn":19,"suggestions":"174"},{"ruleId":"168","severity":1,"message":"169","line":9,"column":9,"nodeType":"170","messageId":"171","endLine":9,"endColumn":12,"suggestions":"175"},{"ruleId":"168","severity":1,"message":"169","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":13,"suggestions":"176"},{"ruleId":"168","severity":1,"message":"169","line":9,"column":13,"nodeType":"170","messageId":"171","endLine":9,"endColumn":16,"suggestions":"177"},{"ruleId":"168","severity":1,"message":"169","line":20,"column":30,"nodeType":"170","messageId":"171","endLine":20,"endColumn":33,"suggestions":"178"},{"ruleId":"168","severity":1,"message":"169","line":37,"column":27,"nodeType":"170","messageId":"171","endLine":37,"endColumn":30,"suggestions":"179"},{"ruleId":"157","severity":1,"message":"158","line":11,"column":19,"nodeType":"159","messageId":"160","endLine":11,"endColumn":24},{"ruleId":"168","severity":1,"message":"169","line":38,"column":33,"nodeType":"170","messageId":"171","endLine":38,"endColumn":36,"suggestions":"180"},{"ruleId":"157","severity":1,"message":"158","line":8,"column":18,"nodeType":"159","messageId":"160","endLine":8,"endColumn":34},{"ruleId":"157","severity":1,"message":"181","line":8,"column":19,"nodeType":"182","messageId":"183","endLine":8,"endColumn":30},{"ruleId":"164","severity":1,"message":"184","line":8,"column":21,"nodeType":"162","messageId":"166","endLine":8,"endColumn":23},{"ruleId":"168","severity":1,"message":"169","line":8,"column":27,"nodeType":"170","messageId":"171","endLine":8,"endColumn":30,"suggestions":"185"},{"ruleId":"164","severity":1,"message":"186","line":8,"column":8,"nodeType":"162","messageId":"166","endLine":8,"endColumn":22},{"ruleId":"157","severity":1,"message":"158","line":10,"column":22,"nodeType":"159","messageId":"160","endLine":10,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":80,"column":33,"nodeType":"170","messageId":"171","endLine":80,"endColumn":36,"suggestions":"187"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'onPerfEntry' should be typed.","Identifier","missingArgType","@typescript-eslint/no-unused-vars","'isLoginWithGoogle' is assigned a value but never used.","unusedVar","'signUpWithGoogle' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["188","189"],["190","191"],["192","193"],["194","195"],["196","197"],["198","199"],["200","201"],["202","203"],["204","205"],"Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed","'id' is defined but never used.",["206","207"],"'CustomDropdown' is defined but never used.",["208","209"],{"messageId":"210","fix":"211","desc":"212"},{"messageId":"213","fix":"214","desc":"215"},{"messageId":"210","fix":"216","desc":"212"},{"messageId":"213","fix":"217","desc":"215"},{"messageId":"210","fix":"218","desc":"212"},{"messageId":"213","fix":"219","desc":"215"},{"messageId":"210","fix":"220","desc":"212"},{"messageId":"213","fix":"221","desc":"215"},{"messageId":"210","fix":"222","desc":"212"},{"messageId":"213","fix":"223","desc":"215"},{"messageId":"210","fix":"224","desc":"212"},{"messageId":"213","fix":"225","desc":"215"},{"messageId":"210","fix":"226","desc":"212"},{"messageId":"213","fix":"227","desc":"215"},{"messageId":"210","fix":"228","desc":"212"},{"messageId":"213","fix":"229","desc":"215"},{"messageId":"210","fix":"230","desc":"212"},{"messageId":"213","fix":"231","desc":"215"},{"messageId":"210","fix":"232","desc":"212"},{"messageId":"213","fix":"233","desc":"215"},{"messageId":"210","fix":"234","desc":"212"},{"messageId":"213","fix":"235","desc":"215"},"suggestUnknown",{"range":"236","text":"237"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"236","text":"238"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"239","text":"237"},{"range":"239","text":"238"},{"range":"240","text":"237"},{"range":"240","text":"238"},{"range":"241","text":"237"},{"range":"241","text":"238"},{"range":"242","text":"237"},{"range":"242","text":"238"},{"range":"243","text":"237"},{"range":"243","text":"238"},{"range":"244","text":"237"},{"range":"244","text":"238"},{"range":"245","text":"237"},{"range":"245","text":"238"},{"range":"246","text":"237"},{"range":"246","text":"238"},{"range":"247","text":"237"},{"range":"247","text":"238"},{"range":"248","text":"237"},{"range":"248","text":"238"},[467,470],"unknown","never",[127,130],[147,150],[178,181],[171,174],[235,238],[491,494],[941,944],[1451,1454],[261,264],[2746,2749]]